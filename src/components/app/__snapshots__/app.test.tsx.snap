// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App correctly renders Authorization is required 1`] = `
<App
  attempts={3}
  currentStep={0}
  isNoMoreAttempts={false}
  isNoMoreTime={false}
  questions={
    Array [
      Object {
        "answers": Array [
          Object {
            "genre": "pop",
            "src": "./tracks/Anivar_Summer.mp3",
          },
          Object {
            "genre": "jazz",
            "src": "./tracks/Billie_Eilish_ilomilo.mp3",
          },
          Object {
            "genre": "rock",
            "src": "./tracks/Cj_L_Black_Rain.mp3",
          },
          Object {
            "genre": "classic",
            "src": "./tracks/Orquesta_L_rica_de_Barcelona_Las_Cuatro_Estaciones,_Invierno_Allegro_Non_Molto.mp3",
          },
        ],
        "genre": "rock",
        "type": "genre",
      },
      Object {
        "answers": Array [
          Object {
            "artist": "Billie Eilish",
            "picture": "/img/default-artist.png",
          },
          Object {
            "artist": "Imagine Dragons",
            "picture": "/img/default-artist.png",
          },
          Object {
            "artist": "Artur Latte",
            "picture": "/img/default-artist.png",
          },
        ],
        "song": Object {
          "artist": "Artur Latte",
          "src": "./tracks/Raim_Artur_Latte.mp3",
        },
        "type": "artist",
      },
    ]
  }
  user={Object {}}
>
  <Switch>
    <Route
      component={[Function]}
      computedMatch={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/auth",
          "url": "/auth",
        }
      }
      exact={true}
      location={
        Object {
          "hash": "",
          "pathname": "/auth",
          "search": "",
          "state": undefined,
        }
      }
      path="/auth"
    >
      <WithLogin
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/auth",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/auth",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "pathname": "/auth",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/auth",
            "url": "/auth",
          }
        }
      >
        <authorization-screen
          email=""
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "pathname": "/auth",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/auth",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          isDisabled={true}
          location={
            Object {
              "hash": "",
              "pathname": "/auth",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/auth",
              "url": "/auth",
            }
          }
          onEmailChange={[Function]}
          onPasswordChange={[Function]}
          password=""
        />
      </WithLogin>
    </Route>
  </Switch>
</App>
`;

exports[`App correctly renders Losing screen 1`] = `
<App
  attempts={3}
  currentStep={1}
  isNoMoreAttempts={false}
  isNoMoreTime={true}
  questions={
    Array [
      Object {
        "answers": Array [
          Object {
            "genre": "pop",
            "src": "./tracks/Anivar_Summer.mp3",
          },
          Object {
            "genre": "jazz",
            "src": "./tracks/Billie_Eilish_ilomilo.mp3",
          },
          Object {
            "genre": "rock",
            "src": "./tracks/Cj_L_Black_Rain.mp3",
          },
          Object {
            "genre": "classic",
            "src": "./tracks/Orquesta_L_rica_de_Barcelona_Las_Cuatro_Estaciones,_Invierno_Allegro_Non_Molto.mp3",
          },
        ],
        "genre": "rock",
        "type": "genre",
      },
      Object {
        "answers": Array [
          Object {
            "artist": "Billie Eilish",
            "picture": "/img/default-artist.png",
          },
          Object {
            "artist": "Imagine Dragons",
            "picture": "/img/default-artist.png",
          },
          Object {
            "artist": "Artur Latte",
            "picture": "/img/default-artist.png",
          },
        ],
        "song": Object {
          "artist": "Artur Latte",
          "src": "./tracks/Raim_Artur_Latte.mp3",
        },
        "type": "artist",
      },
    ]
  }
  user={Object {}}
>
  <Switch>
    <Route
      component="losing-screen"
      computedMatch={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/lose",
          "url": "/lose",
        }
      }
      exact={true}
      location={
        Object {
          "hash": "",
          "pathname": "/lose",
          "search": "",
          "state": undefined,
        }
      }
      path="/lose"
    >
      <losing-screen
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "pathname": "/lose",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/lose",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "pathname": "/lose",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {},
            "path": "/lose",
            "url": "/lose",
          }
        }
      />
    </Route>
  </Switch>
</App>
`;

exports[`App correctly renders Question screen 1`] = `
<App
  attempts={3}
  currentStep={1}
  isNoMoreAttempts={false}
  isNoMoreTime={false}
  questions={
    Array [
      Object {
        "answers": Array [
          Object {
            "genre": "pop",
            "src": "./tracks/Anivar_Summer.mp3",
          },
          Object {
            "genre": "jazz",
            "src": "./tracks/Billie_Eilish_ilomilo.mp3",
          },
          Object {
            "genre": "rock",
            "src": "./tracks/Cj_L_Black_Rain.mp3",
          },
          Object {
            "genre": "classic",
            "src": "./tracks/Orquesta_L_rica_de_Barcelona_Las_Cuatro_Estaciones,_Invierno_Allegro_Non_Molto.mp3",
          },
        ],
        "genre": "rock",
        "type": "genre",
      },
      Object {
        "answers": Array [
          Object {
            "artist": "Billie Eilish",
            "picture": "/img/default-artist.png",
          },
          Object {
            "artist": "Imagine Dragons",
            "picture": "/img/default-artist.png",
          },
          Object {
            "artist": "Artur Latte",
            "picture": "/img/default-artist.png",
          },
        ],
        "song": Object {
          "artist": "Artur Latte",
          "src": "./tracks/Raim_Artur_Latte.mp3",
        },
        "type": "artist",
      },
    ]
  }
  user={Object {}}
>
  <Switch>
    <Route
      computedMatch={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        }
      }
      path="/"
      render={[Function]}
    >
      <question-screen-layout
        question={
          Object {
            "answers": Array [
              Object {
                "artist": "Billie Eilish",
                "picture": "/img/default-artist.png",
              },
              Object {
                "artist": "Imagine Dragons",
                "picture": "/img/default-artist.png",
              },
              Object {
                "artist": "Artur Latte",
                "picture": "/img/default-artist.png",
              },
            ],
            "song": Object {
              "artist": "Artur Latte",
              "src": "./tracks/Raim_Artur_Latte.mp3",
            },
            "type": "artist",
          }
        }
      />
    </Route>
  </Switch>
</App>
`;

exports[`App correctly renders Welcome screen 1`] = `
<App
  attempts={3}
  currentStep={-1}
  isNoMoreAttempts={false}
  isNoMoreTime={false}
  questions={
    Array [
      Object {
        "answers": Array [
          Object {
            "genre": "pop",
            "src": "./tracks/Anivar_Summer.mp3",
          },
          Object {
            "genre": "jazz",
            "src": "./tracks/Billie_Eilish_ilomilo.mp3",
          },
          Object {
            "genre": "rock",
            "src": "./tracks/Cj_L_Black_Rain.mp3",
          },
          Object {
            "genre": "classic",
            "src": "./tracks/Orquesta_L_rica_de_Barcelona_Las_Cuatro_Estaciones,_Invierno_Allegro_Non_Molto.mp3",
          },
        ],
        "genre": "rock",
        "type": "genre",
      },
      Object {
        "answers": Array [
          Object {
            "artist": "Billie Eilish",
            "picture": "/img/default-artist.png",
          },
          Object {
            "artist": "Imagine Dragons",
            "picture": "/img/default-artist.png",
          },
          Object {
            "artist": "Artur Latte",
            "picture": "/img/default-artist.png",
          },
        ],
        "song": Object {
          "artist": "Artur Latte",
          "src": "./tracks/Raim_Artur_Latte.mp3",
        },
        "type": "artist",
      },
    ]
  }
  user={Object {}}
>
  <Switch>
    <Route
      computedMatch={
        Object {
          "isExact": true,
          "params": Object {},
          "path": "/",
          "url": "/",
        }
      }
      location={
        Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        }
      }
      path="/"
      render={[Function]}
    >
      <welcome-screen
        attempts={3}
      />
    </Route>
  </Switch>
</App>
`;
